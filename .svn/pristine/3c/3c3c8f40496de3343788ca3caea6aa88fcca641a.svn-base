// Ionic Starter App
// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
// 'starter.services' is found in services.js
// 'starter.controllers' is found in controllers.js
angular.module('starter', ['ionic',
  'starter.controllers',
  'starter.services',
  'starter.factoryM',
  'starter.AMapService',
  'starter.RoleService',
  'starter.CssService',
  'starter.PlatformService',
  'starter.filter','angucomplete-alt',
  'starter.WxmsgService','starter.GTMapService'])

/*自定义--判断用户是否有权限的属性指令*/
.directive('hasPermission', function () {
  return {
    link: function ($scope, element, attrs) {
      function toggleVisibilityBasedOnPermission() {
        var hasPermission;
        var str = localStorage.getItem("authorisedPages");

        if (str == null) {
          hasPermission = -1;
        }
        if (str != null) {
          var arr = str.split(",");
          hasPermission = arr;
        }

        $scope.$watch(attrs.hasPermission, function () {
          //这里通过监听 凡是使用了该自定义指令的地方，都会把传进来的值value,进行下面的判断，控制使用该指令的标签element是否显示在UI页面上
          // console.log("value= " + attrs.hasPermission);
          // console.log($.inArray(attrs.hasPermission, hasPermission));
          if ($.inArray(attrs.hasPermission, hasPermission) != -1) {
            $(element).show();
          }
          if ($.inArray(attrs.hasPermission, hasPermission) == -1) {
            $(element).hide();
          }
        });
      }
      toggleVisibilityBasedOnPermission();
      $scope.$on('permissionsChanged', toggleVisibilityBasedOnPermission);
    }
  };
})

.run(function($ionicPlatform,$location, $ionicPopup, $rootScope) {
  $ionicPlatform.ready(function() {
    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
    // for form inputs)
    if (window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      cordova.plugins.Keyboard.disableScroll(true);

    }
    if (window.StatusBar) {
      // org.apache.cordova.statusbar required
      StatusBar.styleDefault();
    }
    function plusReady(){
      // 监听键按下事件
      plus.key.addEventListener('backbutton', function() {
        if($location.path() == '/tab/dash' || $location.path() == '/tab/chat' || $location.path() == '/tab/account' ) {
          plus.runtime.quit();
        } else {
          //history.back(-1);
          window.history.back();
        }
      }, false);
    }
    if(window.plus){
      plusReady();
    }else{
      document.addEventListener("plusready",plusReady,false);
    }
  });

  //主页面显示退出提示框
  $ionicPlatform.registerBackButtonAction(function (e) {
    e.preventDefault();
    function showConfirm() {
      var confirmPopup = $ionicPopup.confirm({
        title: '<strong>退出应用?</strong>',
        template: '你确定要退出应用吗?',
        okText: '退出',
        cancelText: '取消'
      });

      confirmPopup.then(function (res) {
        if (res) {
          ionic.Platform.exitApp();
        } else {
          // Don't close
        }
      });
    }

    // Is there a page to go back to?
    if ($location.path() == '/tab/dash' ) {
      showConfirm();
    }
    else
    {
      window.history.back();
    }
    // } else if ($rootScope.$viewHistory.backView ) {
    //   window.history.back();
    //   // Go back in history
    //  // $rootScope.$viewHistory.backView.go();
    // } else {
    //   // This is the last page: Show confirmation popup
    //   showConfirm();
    // }

    return false;
  }, 101);
})

  .provider('userService', function () {
    var data = {method:0,userInfo:"",pwd:"",userName:"",if_map:true,address:'http://192.168.1.123:8089/',lng:0,lat:0};
    function sendPositon () {
      var positionObj = {
        userId: userService(0).userInfo,
        x: data.lng,
        y: data.lat
      };
      alert(angular.toJson(positionObj));
      $http.post(userService(0).address + "LocationService.asmx/GetLocation",positionObj)
        .success(function (response, status, headers, config) {
          //alert(angular.toJson(response));
        }).error(function (response, status, headers, config) {
        //alert('error');
      });
    };
    var f = function (method,value) {
      if (method==1)
      {
        data.userInfo=value;
        // if(value=='lxd'||value=='046')//lxd时监听位置
        // {
        //   data.if_map=true;
        // }
        // else
        // {
        //   data.if_map=false;
        // }
      }
      if (method==2)
      {
        data.pwd=value;
      }
      if (method==3)
      {
        data.userName=value;
      }
      if (method==9)
      {
        data.address=value;
      }
      if (method=="lng,lat")
      {
        data.lng=value[0];
        data.lat=value[1];
        sendPositon();
      }
      // if (method=="lat")
      // {
      //   data.lat=value;
      // }

      return data;
    };
    this.$get = function () {
      return f;
    };
  })

.config(function($stateProvider, $urlRouterProvider,$ionicConfigProvider) {

  // Ionic uses AngularUI Router which uses the concept of states
  // Learn more here: https://github.com/angular-ui/ui-router
  // Set up the various states which the app can be in.
  // Each state's controller can be found in controllers.js
  $stateProvider

  // setup an abstract state for the tabs directive
    .state('tab', {
      url: '/tab',
      abstract: true,
      cache:'false',
      templateUrl: 'templates/tabs.html',
      controller: 'TabsCtrl'
  })
    /**
     * 0-登录页
     */
    //登录
    .state('login', {
      url: '/login',
      cache:'false',
      templateUrl: 'templates/login.html',
      controller: 'LoginCtrl'
    })
    //提交完成
    .state('submit-ok', {
      url: '/submit-ok',
      cache:'false',
      templateUrl: 'templates/submit-ok.html',
      controller: 'SubCtrl'
    })


    //定位位置
    .state('location', {
      url: '/location',
      cache:'false',
      //cache:'false', //是否缓存页面信息
      templateUrl: 'templates/dash-location.html',
      controller: 'AMapCtrl'
     // controller: 'LocationCtrl'
    })
    //测试
    .state('test', {
      url: '/test',
      cache:'true', //是否缓存页面信息
      templateUrl: 'templates/test.html',
      controller: 'TestCtrl'
    })
    // //业务--2   拜访历史
    // .state('yewu2', {
    //   url: '/dash/yewu2',
    //   views: {
    //     'yewu2': {
    //       templateUrl: 'templates/dash-yewu2.html',
    //       controller: 'YW_2_Ctrl'
    //     }
    //   }
    // })

  // Each tab has its own nav history stack:
  .state('tab.dash', {
    url: '/dash',
  //  cache:'true', //是否缓存页面信息
    views: {
      'tab-dash': {
        templateUrl: 'templates/tab-dash.html',
        controller: 'AMapCtrl',
      }
    }
  })

  //维修--1 维修申请单
    .state('weixiu1', {
      url: '/dash/weixiu1',
      cache:'false', //是否缓存页面信息
      templateUrl: 'templates/dash-weixiu1.html',
      controller: 'WX_1_Ctrl'
    })
    //维修--1  维修总结
    .state('weixiu2', {
      url: '/dash/weixiu2',
      cache:'false', //是否缓存页面信息
        templateUrl: 'templates/dash-weixiu2.html',
        controller: 'WX_2_Ctrl'
    })

    //业务--1   客户拜访
    .state('yewu1', {
      url: '/dash/yewu1',
      cache:'false', //是否缓存页面信息
      templateUrl: 'templates/dash-yewu1.html',
      controller: 'YW_1_Ctrl'
    })
    //业务--2   客户拜访历史
    .state('yewu2', {
      url: '/dash/yewu2',
      cache:'false', //是否缓存页面信息
      templateUrl: 'templates/dash-yewu2.html',
      controller: 'YW_2_Ctrl'
    })

  .state('tab.chats', {
      url: '/chats',
      views: {
        'tab-chats': {
          templateUrl: 'templates/tab-chats.html',
          controller: 'ChatsCtrl'
        }
      }
    })
    .state('tab.chat-detail', {
      url: '/chats/:chatId',
      views: {
        'tab-chats': {
          templateUrl: 'templates/chat-detail.html',
          controller: 'ChatDetailCtrl'
        }
      }
    })

  .state('tab.account', {
    url: '/account',
    views: {
      'tab-account': {
        templateUrl: 'templates/tab-account.html',
        controller: 'AccountCtrl'
      }
    }
  });



  // if none of the above states are matched, use this as the fallback
  $urlRouterProvider.otherwise('/login');

  // 用于将ion-tabs置于页面底下
  $ionicConfigProvider.platform.ios.tabs.style('standard');
  $ionicConfigProvider.platform.ios.tabs.position('bottom');
  $ionicConfigProvider.platform.android.tabs.style('standard');
  $ionicConfigProvider.platform.android.tabs.position('standard');
  $ionicConfigProvider.platform.ios.navBar.alignTitle('center');
  $ionicConfigProvider.platform.android.navBar.alignTitle('left');
  $ionicConfigProvider.platform.ios.backButton.previousTitleText('').icon('ion-ios-arrow-thin-left');
  $ionicConfigProvider.platform.android.backButton.previousTitleText('').icon('ion-android-arrow-back');
  $ionicConfigProvider.platform.ios.views.transition('ios');
  $ionicConfigProvider.platform.android.views.transition('android');

});
